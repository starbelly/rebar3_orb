version: 2.1

description: Orb for building and testing rebar3 projects.

examples:
  common_test:
    description: |
      Run common test suites of project. Be sure to add `{ct_opts, [{ct_hooks, [cth_surefire]}]}.` to your project's `rebar.config` so JUnit XML metadata for the test results is able to be collected and used by CircleCI.
    usage:
      version: 2.1

      orbs:
        rebar3: tsloughter/rebar3@0.1.1

      workflows:
        build-test:
          jobs:
            - rebar3/compile
            - rebar3/xref:
                requires:
                  - rebar3/compile
            - rebar3/dialyzer:
                requires:
                  - rebar3/compile
            - rebar3/ct:
                requires:
                  - rebar3/compile

executors:
  erlang:
    parameters:
      version:
        description: The Erlang/OTP docker image tag to use.
        type: string
        default: "21.2-alpine"
    docker:
      - image: erlang:<<parameters.version>>
        entrypoint: ["/bin/sh"]

commands:
  install_ca_certs:
    description: |
      The package ca-certificates is required for CircleCI to store caches and it is currently removed from the final Erlang docker image, so we must install it at the start of a job for now.
    parameters:
      pkg_install_cmd:
        description: |
          The command for installing a package on the distro being used. The default is apk for Alpine, which is the default tag used in the executor.
        type: string
        default: apk add --no-cache
    steps:
      - run:
          command: <<parameters.pkg_install_cmd>> ca-certificates

  with_deps_cache:
    description: |
      Run steps with the dependency cache restored and then save it again if changed.
    parameters:
      steps:
        type: steps
    steps:
      - restore_cache:
          keys:
            - rebar-lock-{{ checksum "rebar.lock" }}
            - hex-packages

      - steps: << parameters.steps >>

      - save_cache:
          key: rebar-lock-{{ checksum "rebar.lock" }}
          paths:
            - ~/project/_build/default/lib
            - ~/project/_build/default/plugins

      - save_cache:
          key: hex-packages
          paths:
            - ~/.cache/rebar3/hex/default/packages

  with_plt_cache:
    description: |
      Run steps with the plt cache restored and then save it again.
    parameters:
      steps:
        type: steps
    steps:
      - restore_cache:
          keys:
            - erlang-plt

      - steps: << parameters.steps >>

      - save_cache:
          key: erlang-plt
          paths:
            - ~/.cache/rebar3/rebar3_*_plt

  on_fail_store_crashdump:
    description: |
      If a job fails this command will copy the rebar3 crashdump file to the artifacts store so you can view it after a failed job.
    parameters:
      cmd:
        description: A unique name, like the command that is running, in case there are multiple dumps.
        type: string
    steps:
      - store_artifacts:
          path: ~/project/rebar3.crashdump
          destination: <<parameters.cmd>>_rebar3_crashdump.txt
          when: on_fail

  compile:
    description: |
      Compile the project.
    steps:
      - run:
          command: rebar3 compile

  dialyzer:
    description: |
      Run dialyzer.
    steps:
      - run:
          command: rebar3 dialyzer

  xref:
    description: |
      Run xref.
    steps:
      - run:
          command: rebar3 xref
  ct:
    description: |
      Run common test suites.
    steps:
      - run:
          command: rebar3 ct

jobs:
  compile:
    executor: erlang
    steps:
      - install_ca_certs
      - checkout
      - with_deps_cache:
          steps:
            - compile
      - on_fail_store_crashdump:
          cmd: compile

  dialyzer:
    executor: erlang
    steps:
      - install_ca_certs
      - checkout
      - with_deps_cache:
          steps:
            - with_plt_cache:
                steps:
                  - dialyzer
      - on_fail_store_crashdump:
          cmd: dialyzer

  xref:
    executor: erlang
    steps:
      - install_ca_certs
      - checkout
      - with_deps_cache:
          steps:
            - xref
      - on_fail_store_crashdump:
          cmd: xref
  ct:
    executor: erlang
    steps:
      - install_ca_certs
      - checkout
      - with_deps_cache:
          steps:
            - ct
      - on_fail_store_crashdump:
          cmd: ct
      - store_test_results:
          path: ~/project/_build/test/logs/
      - store_artifacts:
          path: ~/project/_build/test/logs
          destination: common_test
